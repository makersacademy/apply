/* Generated by Opal 0.7.2 */
(function(Opal) {
  Opal.dynamic_require_severity = "error";
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass;

  Opal.add_stubs(['$code', '$new']);
  return (function($base, $super) {
    function $Stage5(){};
    var self = $Stage5 = $klass($base, $super, 'Stage5', $Stage5);

    var def = self.$$proto, $scope = self.$$scope;

    def.$display_code = function() {
      var self = this;

      return "puts \"Hello \#{upper(name)}\"\nputs \"Hello \#{lower(name)}\"\nputs \"Hello \#{random_name}\"\nputs \"Hello \#{random_case(name)}\"\n";
    };

    def.$code = function() {
      var self = this;

      return "" + ($scope.get('Stage4').$new().$code()) + "\nputs \"Hello \#{random_case(name)}\"\n\nresult = 1.upto(100).inject([]) do |memo, number|\n  memo << random_case('John')\nend\n\nif result.count('JOHN') > 0 and result.count('john') > 0\n  true\nelse\n  puts \"please ensure your `random_case` method returns either upper case or lower case randomly.\"\nend\n";
    };

    def.$instructions = function() {
      var self = this;

      return "Well done!</br></br>\nNow please implement a method called `random_case` that will return a lower or upper case version of a string at random.  Do not delete the previous methods.\n";
    };

    return (def.$next_stage = function() {
      var self = this;

      return $scope.get('Stage6').$new();
    }, nil) && 'next_stage';
  })(self, null)
})(Opal);

//# sourceMappingURL=stage_5.map
;
