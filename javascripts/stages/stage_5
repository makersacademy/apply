/* Generated by Opal 0.7.2 */
(function(Opal) {
  Opal.dynamic_require_severity = "error";
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass;

  Opal.add_stubs(['$strip', '$display_code', '$new', '$code']);
  return (function($base) {
    var self = $module($base, 'Stages');

    var def = self.$$proto, $scope = self.$$scope;

    (function($base, $super) {
      function $Stage5(){};
      var self = $Stage5 = $klass($base, $super, 'Stage5', $Stage5);

      var def = self.$$proto, $scope = self.$$scope;

      def.$stage_number = function() {
        var self = this;

        return 5;
      };

      def.$display_code = function() {
        var self = this;

        return "" + ($scope.get('Stage4').$new().$display_code().$strip()) + "\nputs \"Hello \#{random_case(name)}\"\n";
      };

      def.$code = function() {
        var self = this;

        return "" + ($scope.get('Stage4').$new().$code()) + "\nputs \"Hello \#{random_case(name)}\"\n\nresult = 1.upto(100).inject([]) do |memo, number|\n  memo << random_case('John')\nend\n\nif result.count('JOHN') > 0 and result.count('john') > 0\n  true\nelse\n  puts \"please ensure your `random_case` method returns either a string in upper case or lower case at random.\"\nend\n";
      };

      def.$instructions = function() {
        var self = this;

        return "<p>Keep going!</p>\n<p>Now please implement a method called `random_case` that will return a lower or upper case version of a string (passed in as an argument) at random. Try to re-use code that you've written already. Do not delete the previous methods. Can you do this in one line of code?</p>\n";
      };

      return (def.$next_stage = function() {
        var self = this;

        return $scope.get('Stage6').$new();
      }, nil) && 'next_stage';
    })(self, null)
  })(self)
})(Opal);

//# sourceMappingURL=stage_5.map
;
