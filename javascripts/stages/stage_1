/* Generated by Opal 0.7.2 */
(function(Opal) {
  Opal.dynamic_require_severity = "error";
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass;

  Opal.add_stubs(['$new']);
  return (function($base) {
    var self = $module($base, 'Stages');

    var def = self.$$proto, $scope = self.$$scope;

    (function($base, $super) {
      function $Stage1(){};
      var self = $Stage1 = $klass($base, $super, 'Stage1', $Stage1);

      var def = self.$$proto, $scope = self.$$scope;

      def.$stage_number = function() {
        var self = this;

        return 1;
      };

      def.$display_code = function() {
        var self = this;

        return "puts \"Hello \#{name}\"\n";
      };

      def.$code = function() {
        var self = this;

        return "puts \"Hello \#{name}\"\nif name =~ /[a-zA-Z]+/\n  true\nelse\n  puts \"please ensure you assign your name to the variable `name`\"\nend\n";
      };

      def.$instructions = function() {
        var self = this;

        return "<p>Please make the code above run correctly, by assigning a string value (use your own name) to a variable `name` in the window on the right. Remember that the testing framework we use is based on you using Ruby to answer the questions. Take your time to play in `IRB` to play around with the code and test possible theories. Any errors in your code will appear below in the results screen. </p>\n";
      };

      return (def.$next_stage = function() {
        var self = this;

        return $scope.get('Stage2').$new();
      }, nil) && 'next_stage';
    })(self, null)
  })(self)
})(Opal);

//# sourceMappingURL=stage_1.map
;
