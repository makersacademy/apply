/* Generated by Opal 0.7.2 */
(function(Opal) {
  Opal.dynamic_require_severity = "error";
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass;

  Opal.add_stubs(['$code', '$new']);
  return (function($base, $super) {
    function $Stage4(){};
    var self = $Stage4 = $klass($base, $super, 'Stage4', $Stage4);

    var def = self.$$proto, $scope = self.$$scope;

    def.$display_code = function() {
      var self = this;

      return "puts \"Hello \#{upper(name)}\"\nputs \"Hello \#{lower(name)}\"\nputs \"Hello \#{random_name}\"\n";
    };

    def.$code = function() {
      var self = this;

      return "" + ($scope.get('Stage3').$new().$code()) + "\nputs \"Hello \#{random_name}\"\n\nresult = 1.upto(100).inject([]) do |memo, number|\n  memo << random_name\nend\n\nif result.count('Nikesh') > 0 and result.count(name) > 0\n  true\nelse\n  puts 'please ensure your `random_name` returns your name or \"Nikesh\" randomly.'\nend\n";
    };

    def.$instructions = function() {
      var self = this;

      return "Well done!</br></br>\nNow please implement a method called `random_name` that will output either the string \"Nikesh\" or the value of `name` at random.  Do not delete the previous methods.\n";
    };

    return (def.$next_stage = function() {
      var self = this;

      return $scope.get('Stage5').$new();
    }, nil) && 'next_stage';
  })(self, null)
})(Opal);

//# sourceMappingURL=stage_4.map
;
